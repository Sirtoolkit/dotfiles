#!{{ lookPath "sh" }}

{{ if eq .chezmoi.os "darwin" -}}
set -e

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para logging con colores
log_info() {
    echo "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo "${RED}‚ùå $1${NC}"
}

log_step() {
    echo "\n${BLUE}üöÄ $1${NC}"
}

# Verificar que estamos en macOS
if [ "$(uname -s)" != "Darwin" ]; then
    log_error "Este script solo funciona en macOS"
    exit 1
fi

# Funci√≥n para configuraci√≥n final
final_setup() {
    log_step "Configuraci√≥n final..."
    
    # Cambiar shell por defecto a zsh si no lo es ya
    if [ "$SHELL" != "/bin/zsh" ] && [ "$SHELL" != "/usr/bin/zsh" ] && [ "$SHELL" != "/opt/homebrew/bin/zsh" ]; then
        if command -v zsh >/dev/null 2>&1;
        then
            log_info "Cambiando shell por defecto a zsh..."
            chsh -s "$(which zsh)"
            log_success "Shell cambiado a zsh"
        else
            log_warning "zsh no est√° disponible, manteniendo shell actual"
        fi
    else
        log_success "zsh ya es el shell por defecto"
    fi
    
    # Informaci√≥n final
    if [ -f "$HOME/.zshrc" ]; then
        log_success "Configuraci√≥n lista - abre una nueva terminal o ejecuta: source ~/.zshrc"
    fi
}

# Funci√≥n para mostrar resumen final
show_summary() {
    log_step "üéâ ¬°Instalaci√≥n completada!"
    
    echo "\n${GREEN}‚úÖ Instalaci√≥n exitosa de tu entorno de desarrollo${NC}"
    echo "\n${BLUE}üìã Chezmoi ejecut√≥ autom√°ticamente (en orden perfecto):${NC}"
    echo "  1Ô∏è‚É£ Homebrew installation"
    echo "  2Ô∏è‚É£ Homebrew packages (mise, tools, etc.)"
    echo "  3Ô∏è‚É£ 1Password agent setup"
    echo "  4Ô∏è‚É£ macOS TouchID for sudo"
    echo "  5Ô∏è‚É£ mise tools (Java, Node, Python, etc.)"
    echo "  6Ô∏è‚É£ Android Platform Tools (con Java disponible)"
    echo "  7Ô∏è‚É£ tmux plugins y configuraci√≥n"
    echo "  8Ô∏è‚É£ Cursor extensions"
    echo "  ‚ú® Todos los dotfiles (.zshrc, .config/, etc.)"
    
    echo "\n${YELLOW}üìù Pr√≥ximos pasos:${NC}"
    echo "  1. Abre una nueva terminal o ejecuta: source ~/.zshrc"
    echo "  2. ¬°Todo est√° listo para usar!"
    
    echo "\n${YELLOW}üí° Si algo fall√≥:${NC}"
    echo "  ‚Ä¢ Ejecuta: chezmoi apply"
    echo "  ‚Ä¢ Para herramientas espec√≠ficas: mise install"
    
    echo "\n${BLUE}üí° Comandos √∫tiles:${NC}"
    echo "  ‚Ä¢ purge-config          - Limpiar configuraciones"
    echo "  ‚Ä¢ purge-all-mobile-dev-cache - Limpiar cach√© de desarrollo"
    echo "  ‚Ä¢ mise-purge-all        - Limpiar herramientas de mise"
    echo "  ‚Ä¢ brew-purge-formula    - Limpiar paquetes de Homebrew"
    echo "  ‚Ä¢ brew-purge-cask       - Limpiar aplicaciones de Homebrew"
    
    echo "\n${GREEN}üöÄ ¬°Tu entorno est√° listo para usar!${NC}\n"
}

# Funci√≥n principal
main() {
    log_step "üçé Iniciando configuraci√≥n final y resumen"
    
    # Verificar que no se ejecute como root
    if [ "$EUID" -eq 0 ]; then
        log_warning "No ejecutes este script como root."
    fi
    
    # Configuraci√≥n final
    final_setup
    
    # Mostrar resumen
    show_summary
}

# Ejecutar funci√≥n principal
main "$@"
{{ end -}}
